x-global: &default-platform
  platform: ${PLATFORM:-linux/arm64}

services:
  # zookeeper:
  #   <<: *default-platform
  #   image: bitnami/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    <<: *default-platform
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes

  minio:
    <<: *default-platform
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  elasticsearch:
    <<: *default-platform
    image: arm64v8/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  spark:
    <<: *default-platform
    image: bitnami/spark:latest
    container_name: spark
    user: "root"
    environment:
      - SPARK_MODE=master
      - PYTHONPATH=/app
      - HOME=/root
    ports:
      - "7077:7077"
      - "8080:8080"
    depends_on:
      - kafka
      - minio
      - elasticsearch
    volumes:
      - ./spark:/app/spark
      - ./config:/app/config
      - ./spark/requirements.txt:/requirements.txt
      - ./spark/user-jars:/opt/bitnami/spark/user-jars

  airflow:
    <<: *default-platform
    image: apache/airflow:2.7.3
    container_name: airflow
    restart: always
    depends_on:
      - kafka
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
    ports:
      - "8081:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./zimbozapp/.env:/opt/airflow/.env
      - ./airflow/requirements.txt:/requirements.txt
      - /var/run/docker.sock:/var/run/docker.sock
    command: bash -c "pip install --no-cache-dir -r /requirements.txt && airflow standalone"

  bot:
    <<: *default-platform
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: telegram-bot
    env_file:
      - ./.env
    depends_on:
      - elasticsearch
    restart: always

volumes:
  minio_data:
  esdata: 